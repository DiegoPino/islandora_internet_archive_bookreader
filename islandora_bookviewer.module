<?php

// $Id$

/*
 * Created on Aug 10, 2007
 */

/**
 * Drupal hook for admin form
 * fedora_repository_name is the name of the top level collection this module will query
 * fedora_repository_pid is the name of the top level pid.
 * Stores this info in the drupal variables table.
 * the name and pid can also be passed as url parameters
 */
function islandora_bookviewer_admin() {
  return "";
}

function islandora_bookviewer_admin_settings_submit($form, $form_values) {

}

/**
 * drupal hook to show help
 */
function islandora_bookviewer_help($path, $arg) {
  switch ($path) {
    case 'admin/modules#description' :
      return t('Grabs a list of items from a collection in Drupal that are presented on the home page.');
    case 'node/add#fedora_repository' :
      return t('Use this page to grab a list of items from a Fedora collection.');
  }
}

function islandora_bookviewer_menu() {
  $items['getbookpage/%'] = array(
    'page callback' => 'islandora_bookviewer_get_book_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    //'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['mods2html/%/%'] = array(
    'page callback' => 'islandora_bookviewer_get_mods',
    'page arguments' => array(1, 2),
    'access callback' => TRUE,
    //'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['bookreader/setup'] = array(
    'page callback' => 'islandora_bookviewer_setup',
    'type' => MENU_CALLBACK,
    'access arguments' => array('view fedora collection'),
  );
  $items['ocrsearch/%/%'] = array(
    'page callback' => 'islandora_bookviewer_ocr_search',
    'page arguments' => array(1, 2),
    'access callback' => TRUE,
    //'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  //experimental - do not expose
  $items['bookreader/standalone'] = array(
    'page callback' => 'bookreader',
    'file' => 'standalone.inc',
    'type' => MENU_CALLBACK,
   // 'access arguments' => array('view fedora collection'),
    'access_callback'=>TRUE
  );
  return $items;
}


function islandora_bookviewer_perm(){
  return array('use bookreader');
}
/*
  function islandora_bookviewer_get_book_page($page) {
  global $base_url;

  // the preferred page
  $page_path = $base_url .":8080/adore-djatoka/resolver?url_ver=Z39.88-2004&rft_id=". $base_url ."/drupal/fedora/repository/". $page ."/JP2/&svc_id=info:lanl-repo/svc/getRegion&svc_val_fmt=info:ofi/fmt:kev:mtx:jpeg2000&svc.format=image/png&svc.level=4&svc.rotate=0";
  // the fallback if the preferred one fails
  $page_path = $base_url ."/drupal/fedora/repository/". $page ."/JP2";

  return $page_path;
  } */

function islandora_bookviewer_get_mods($pageL, $pageR) {
  global $base_url;

  /*
  $url1 = $base_url . ":8080/saxon/SaxonServlet?source=" . $base_url . "/fedora/repository/";
  $url2 = "/MODS&style=" . $base_url . "/" . drupal_get_path('module', 'islandora_bookviewer') . "/mods2html.xsl";
  */
  $xmlL = new DOMDocument;
  $xmlL->load($base_url ."/fedora/repository/". $pageL ."/MODS");
  $xmlR = new DOMDocument;
  $xmlR->load($base_url ."/fedora/repository/". $pageR ."/MODS");

  $proc = new XSLTProcessor;
  $stylesheet = new DOMDocument;
  $stylesheet->load($base_url ."/". drupal_get_path('module', 'islandora_bookviewer') ."/mods2html.xsl");
  $proc->importStyleSheet($stylesheet);

  $httpL = "";
  $httpR = "";
  if ($pageL != "-") {
    //$httpL = drupal_http_request($url1 . $pageL . $url2)->data;
    $httpL = $proc->transformToXML($xmlL);
  }
  if ($pageR != "-") {
    //$httpR = drupal_http_request($url1 . $pageR . $url2)->data;
    $httpR = $proc->transformToXML($xmlR);
  }
  print '<div id="modsTop"><div id="modsLeft">' . $httpL . '</div><div id="modsRight">' . $httpR . '</div></div>';

  return;
}

function islandora_bookviewer_ocr_search($book, $ocr_term) {
  global $base_url;

  $url = $base_url .":8080/solr/select/?q=ds_OCR_t:\"". $ocr_term ."\"&fq=rels_isPageOf_uri_ms:\"info:fedora/". $book ."\"&version=2.2&start=0&fl=PID,rels_isPageNumber_uri_ms&wt=json";
  $json = drupal_http_request($url);
  if (is_callable('json_decode')) {
    $result_obj = json_decode($json->data);
  }
  else {
    //break shit
    watchdog('islandora_bookviewer', 'No json_decode, herp derp.', array(), WATCHDOG_ERROR);
    // send back something empty
    return;
  }
  $output = array('matches' => array());
  foreach ($result_obj->response->docs as $doc) {
    $output['matches'][] = array(
      'text' => "",//$doc->PID,
      'par' => array(
        array(
          'page' => intval(str_replace("info:fedora/", "", $doc->rels_isPageNumber_uri_ms[0])),
          'boxes' => array(),
        )
      )
    );
  }
  /*array('matches' => array(
    array(
      'text' => whatever,
    ),
   ));
  */
  drupal_json($output);

  return;
}

function islandora_bookviewer_form_islandora_book_admin_settings_alter(&$form, &$form_state) {

  $djatoka_path = isset($form_state['values']['islandora_djatoka_path']) ? $form_state['values']['islandora_djatoka_path'] : variable_get('islandora_djatoka_path', 'http://localhost:8080/adore-djatoka');
  $djatoka_avail = is_url_valid($djatoka_path);
  $confirmation_message = ($djatoka_avail ? '<img src="' . url('misc/watchdog-ok.png') . '"/>'
          . t('Djatoka url is valid.') : '<img src="'
          . url('misc/watchdog-error.png') . '"/> '
          . t('Unable to locate djatoka installation at !tile_path</p>', array('!tile_path' => $djatoka_path)));

  $form['book_ahah_wrapper']['islandora_djatoka_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to Djatoka'),
    '#description' => t('Path to Djatoka installation'),
    '#default_value' => $djatoka_path,
    '#ahah' => array(
      'path' => 'islandora/book/ocr',
      'wrapper' => 'ibook-url',
      'effect' => 'fade',
      'event' => 'change'),
  );

  $form['book_ahah_wrapper']['infobox3'] = array(
    '#type' => 'item',
    '#value' => $confirmation_message,
  );
}

/**
 * Provides page information for Bookviewer
 * To be invoked with ajax
 * @global url $base_url
 * @param string $pid
 */
function islandora_bookviewer_setup($pid) {
  module_load_include('inc', 'islandora_book', 'book_pack_utils');
  module_load_include('inc', 'fedora_repository', 'api/fedora_item');
  global $base_url;
  $item = new Fedora_Item($pid);
  $label = $item->objectProfile->objLabel;
  $djatoka_prefix = variable_get('islandora_djatoka_path', 'http://localhost:8080/adore-djatoka') . '/resolver?url_ver=Z39.88-2004&rft_id=';
  $islandora_prefix = $base_url . '/fedora/repository/';
  $fedora_prefix = variable_get('fedora_base_url', 'http:8080/fedora');
  $book_pids = get_page_pids($pid);
  $filename = $djatoka_prefix . "$fedora_prefix/objects/" . $book_pids[count($book_pids)] . "/datastreams/JP2/content&svc_id=info:lanl-repo/svc/getMetadata";
  $pageData = json_decode(file_get_contents($filename));
  $pageProgression = get_page_progression($pid);
  $configs = array();
  $configs['DJATOKA_PREFIX'] = $djatoka_prefix;
  $configs['ISLANDORA_PREFIX'] = $islandora_prefix;
  $configs['FEDORA_PREFIX'] = $fedora_prefix;
  $configs['COMPRESSION'] = 4;
  $configs['book_pids'] = $book_pids;
  $configs['page_width'] = $pageData->width;
  $configs['page_height'] = $pageData->height;
  $configs['page_count'] = count($book_pids);
  $configs['page_progression'] = $pageProgression;
  $configs['label'] = $label;

  $json = json_encode($configs);
  echo $json;
}
